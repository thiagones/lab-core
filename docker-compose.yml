version: '3.7'

networks:
  lab-network:
    driver: bridge
    
services:
 
  #######################################
  # WebApi: API A
  #######################################
  webapi_a:
    image: lab-webapi:latest
    container_name: "lab-webapi-a"
    build:
      context: ./
      dockerfile: ./lab.webapi/Dockerfile
    environment: 
      - HEALTHCHECK=HealthCheck_0001_A
    networks:
      - lab-network

  #######################################
  # WebApi: API B
  #######################################
  webapi_b:
    image: lab-webapi:latest
    container_name: "lab-webapi-b"
    build:
      context: ./
      dockerfile: ./lab.webapi/Dockerfile
    environment: 
      - HEALTHCHECK=HealthCheck_9999_B
    networks:
      - lab-network

  #######################################
  # MongoDB: Database utilizada pela API
  #######################################
  mongo:
    image: mongo:latest
    container_name: "lab-mongo"
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=123mudar
    networks:
      - lab-network

  mongo-express:
    image: mongo-express:latest
    container_name: "lab-mongo-express"
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=123mudar
    networks:
      - lab-network     
  
  #######################################
  # Redis: Cache
  #######################################
  redis:
    image: redis:latest
    container_name: "lab-redis"
    networks: 
      - lab-network

  #######################################
  # Redis: Cache
  #######################################
  rabbit:
    image: "rabbitmq:3-management"
    container_name: "lab-rabbitmq"
    environment:
      - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCQWEASDG
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "15672:15672"
      - "5672:5672"
    networks: 
      - lab-network

  #######################################
  # Postgres: Database utilizado pelo Kong
  #######################################
  kong-database:
    image: postgres:9.6
    container_name: "lab-kong-database"
    restart: always
    networks:
      - lab-network
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5

  #######################################
  # Kong Database migration
  #######################################
  kong-migration:
    image: kong:latest
    command: "kong migrations bootstrap"
    networks:
      - lab-network
    restart: on-failure
    environment:
      KONG_PG_HOST: kong-database
    links:
      - kong-database
    depends_on:
      - kong-database

  #######################################
  # Kong: API Gateway
  #######################################
  kong:
    image: kong:latest
    container_name: "lab-kong"
    restart: always
    networks:
      - lab-network
    environment:
      KONG_PG_HOST: kong-database
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-migration
      - kong-database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - "80:8000"
      - "443:8443"


  #######################################
  # Konga Proparação do database 
  #######################################
  konga-prepare:
    image: pantsel/konga:next
    command: "-c prepare -a postgres -u postgresql://kong@kong-database:5432/konga_db"
    networks:
      - lab-network
    restart: on-failure
    links:
      - kong-database
    depends_on:
      - kong-database

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga:next
    container_name: "lab-konga"
    restart: always
    networks:
        - lab-network
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      DB_DATABASE: konga_db
      NODE_ENV: production
    depends_on:
      - kong-database
    ports:
      - "1337:1337"